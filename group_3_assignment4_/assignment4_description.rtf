{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12340\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl340\sa240\partightenfactor0

\f0\fs29\fsmilli14667 \cf2 \cb3 \expnd0\expndtw0\kerning0
We are imitating the children\'92s movie \'93Cloudy with a Chance of Meatballs\'94. Our scene will be a park being rained on with meatballs dropped from clouds. Wherein the classes are: (i) Clouds (-Ian)\cb1  \cb3 (ii) Meatballs (-Kevin) (iii) Trees (-Neil)\
\
Clouds: 4 separate clouds  overplayed on each other and slide across the blue sky.\
\
Meatballs: Drop from different positions within the 4 clouds based on the current x-position of clouds. 7 Meatball objects are created based on different cloud positions. This was the most challenging part. \
\
Clouds: Several tree objects rotate from origin to the left to make it seem like the meatballs are destroying the environment. \
\
Two levels of hierarchical grouping- The cloud class has method check() which creates meatballs based on the current x-position of the clouds.\
\
Unexpected- The animation works fine until the cloud disappears to the right of the window. After which the balls glitch and gradual travel towards the top of the screen. We tried to define the total time duration (e.g.  3seconds) to prevent the animation from glitching, but we could not figure that out. \
\
\
\

\f1\fs24 \cb1 \
}